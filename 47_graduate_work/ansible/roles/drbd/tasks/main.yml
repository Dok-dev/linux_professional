---
# Отключаем firewalld и удаляем его из автозагрузки
# либо: firewall-cmd --add-port=6996-7800/tcp --permanent && firewall-cmd --reload
- name: Disable firewalld service
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: false

# # Отключаем SElinux
# # либо: sudo semanage permissive -a drbd_t
# - name: Disable SELinux
#   selinux:
#     state: disabled

# - name: Ensure SELinux is set to disable mode
#   ansible.builtin.lineinfile:
#     path: /etc/selinux/config
#     regexp: '^SELINUX='
#     line: SELINUX=disabled

#  Установка EPEL-release
- name: Install epel-release
  ansible.builtin.dnf:
    name:
      - epel-release
    state: present
    update_cache: true

- name: Update rpm
  ansible.builtin.shell:
    cmd: dnf -y update rpm

 # Установка EPEL-release 8
- name: Import a key from a url
  ansible.builtin.rpm_key:
    state: present
    key: https://www.elrepo.org/RPM-GPG-KEY-elrepo.org

- name: Install epel-release-8
  ansible.builtin.dnf:
    name:
      - https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm
    state: present

- name: Update kernel
  ansible.builtin.dnf:
    name:
      - kernel-core
    state: latest
    update_cache: true
  notify: Reboot to get the new core

- name: Install DRBD packages
  ansible.builtin.dnf:
    name:
      - drbd90-utils
      - kmod-drbd90
    state: present
    update_cache: true

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: Insert DRBD kernel module
  community.general.modprobe:
    name: drbd
    state: present

- name: Create DRBD replication config
  ansible.builtin.template:
    src: global_common.j2
    dest: /etc/drbd.d/global_common.conf
    owner: root
    group: root
    mode: '0644'

- name: Create DRBD resouce config
  ansible.builtin.template:
    src: back_fs.j2
    dest: /etc/drbd.d/{{ drbd_resource_name }}.res
    owner: root
    group: root
    mode: '0644'

- name: Check DRBD status
  ansible.builtin.command:
    cmd: drbdadm status
  register: drbd_status
  
- name: Create DRBD resouce
  ansible.builtin.command:
    cmd: drbdadm create-md --force all
  when: "'peer-disk:UpToDate' not in drbd_status.stdout"

- name: Run DRBD resouce
  ansible.builtin.command:
    cmd: drbdadm up {{ drbd_resource_name }}
  when: "'disk:UpToDate' not in drbd_status.stdout"

- name: Set primary DRBD souce
  ansible.builtin.command:
    cmd: drbdadm primary --force {{ drbd_resource_name }}
  when: 
    - ansible_hostname == drbd_node1_name
    - drbd_allow_two_primaries == 'yes'
