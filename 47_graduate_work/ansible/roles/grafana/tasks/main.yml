---
- name: Download grafana
  ansible.builtin.get_url:
    url: https://mirrors.cloud.tencent.com/grafana/yum/rpm/Packages/grafana-9.1.3-1.x86_64.rpm
    timeout: 600
    dest: /tmp/grafana-9.1.3-1.x86_64.rpm

- name: Install grafana
  yum:
    name: /tmp/grafana-9.1.3-1.x86_64.rpm
    disable_gpg_check: true
    validate_certs: false
    state: latest

- name: Copy grafana configuration file
  template:
    src: "grafana.conf.j2"
    dest: /etc/grafana/grafana.ini
  with_items: "{{ grafana_dashboards }}"
  notify: event_restart_grafana

- name: Create datasource file
  ansible.builtin.template:
    src: "datasource.yaml.j2"
    dest: "/etc/grafana/provisioning/datasources/datasource.yaml"
    owner: root
    group: grafana
    mode: "0640"
  notify: event_restart_grafana

- name: Create dashboards file
  ansible.builtin.template:
    src: "dashboard.yaml.j2"
    dest: "/etc/grafana/provisioning/dashboards/dashboard.yaml"
    owner: root
    group: grafana
    mode: "0640"
  notify: event_restart_grafana

- name: Create dashboards directories
  ansible.builtin.file:
    path: "/var/lib/grafana/dashboards"
    state: directory
    owner: root
    group: grafana
    mode: "0770"

- name: Install dashboard
  ansible.builtin.get_url:
    url:  "https://grafana.com/api/dashboards/{{ item.dashboard_id }}/revisions/{{ item.revision_id }}/download"
    dest: "/var/lib/grafana/dashboards/{{ item.name }}-{{ item.dashboard_id }}.json"
  with_items: "{{ grafana_dashboards }}"
  notify: event_restart_grafana

- name: Start grafana service
  service:
    name: grafana-server
    enabled: true
    state: started

- name: Allow Ports
  firewalld:
    port: '3000/tcp'
    permanent: true
    state: enabled
  notify: event_restart_firewalld

- name: Check if Grafana is accessible
  uri:
    url: http://127.0.0.1:3000
    method: GET
    status_code: 200
