---
- name: Disable firewalld service
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: false
  when: ansible_facts.distribution == 'CentOS'

# Отключаем SElinux
- name: Disable SELinux
  selinux:
    state: disabled
  when: ansible_facts.distribution == 'CentOS'

- name: Ensure SELinux is set to disable mode
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=disabled
  when: ansible_facts.distribution == 'CentOS'

#  Установка EPEL-release
- name: Install epel-release
  ansible.builtin.dnf:
    name:
      - epel-release
    state: present
    update_cache: true

- name: Enable HA repositories
  ansible.builtin.command:
    cmd: dnf config-manager --set-enabled ha

- name: Update rpm
  ansible.builtin.shell:
    cmd: dnf -y update rpm

- name: Import a key from a url
  ansible.builtin.rpm_key:
    state: present
    key: https://www.elrepo.org/RPM-GPG-KEY-elrepo.org

- name: Install epel-release-8
  ansible.builtin.dnf:
    name:
      - https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm
    state: present

- name: Install Pacemaker packages
  ansible.builtin.dnf:
    name:
      - pcs
      - fence-agents-all
    state: present
    # disable_gpg_check: true
    update_cache: true

- name: Checking If {{ corosync_authkey_file }} Exists
  ansible.builtin.stat:
    path: "{{ corosync_authkey_file }}"
  register: "_corosync_authkey"

- name: Installing haveged On {{ pacemaker_primary_server }}
  ansible.builtin.dnf:
    name: "haveged"
    state: "present"
  become: true
  when: >
        not _corosync_authkey['stat']['exists'] and
        (inventory_hostname == pacemaker_primary_server)

- name: dGenerating corosync authkey On {{ pacemaker_primary_server }}
  ansible.builtin.command: corosync-keygen
  become: true
  register: "_corosync_auth_key_generated"
  when: >
        not _corosync_authkey['stat']['exists'] and
        (inventory_hostname == pacemaker_primary_server)

- name: Ensuring /etc/corosync/uidgid.d Folder Exists
  ansible.builtin.file:
    path: "/etc/corosync/uidgid.d"
    state: "directory"
  become: true

- ansible.builtin.import_tasks: configure.yml
  tags:
    - pacemaker_config

- ansible.builtin.import_tasks: cluster.yml
  tags:
    - pacemaker_cluster
