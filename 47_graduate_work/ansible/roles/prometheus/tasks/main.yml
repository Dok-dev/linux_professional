- name: Create prometheus user group
  group: name="{{groupId}}"
  become: true

- name: Create prometheus user
  user:
    name: "{{userId}}"
    group: "{{groupId}}"
    system: true
    shell: "/sbin/nologin"
    comment: "{{userId}} nologin User"
    createhome: "no"
    state: present

- name: Install prometheus
  unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v{{ version }}/prometheus-{{ version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: true

- name: Copy prometheus file to bin
  copy:
    src: "/tmp/prometheus-{{ version }}.linux-amd64/prometheus"
    dest: "/usr/local/bin/prometheus"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: true
    mode: 0755

- name: Create directory
  file: 
    path: "/data/prometheus/"
    state: directory
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: 0755

- name: Create directory
  file: 
    path: "/etc/prometheus/"
    state: directory
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: 0755

- name: Create prometheus config file
  template:
    src: prometheus.conf.j2
    dest: /etc/prometheus/prometheus.conf
  notify: event_restart_prometheus

- name: Create alert config file
  copy:
    src: "{{ role_path }}/files/alertrules.yml"
    dest: /etc/prometheus/alert.rules.yml
  notify: event_restart_prometheus

- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify: systemd_reload

- name: Start prometheus service
  service:
    name: prometheus
    state: started
    enabled: true

- name: Allow prometheus ports
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
  loop: [ '9090/tcp', '9093/tcp', '9094/tcp', '9100/tcp', '9094/udp' ]

- name: Check if prometheus is accessible
  uri:
    url: http://localhost:9090
    method: GET
    status_code: 200
