---
- name: OSPF configuration
  hosts: all
  become: true
  gather_facts: true
  vars_files:
    - defaults/main.yml
    
  tasks:
  # Обновление пакетов и установка vim, traceroute, tcpdump, net-tools
  - name: install base tools
    ansible.builtin.apt:
      name:
        - vim
        - traceroute
        - tcpdump
        - net-tools
      state: present
      update_cache: true


  ### Настройка OSPF ####

  #Отключаем UFW и удаляем его из автозагрузки
  - name: disable ufw service
    service:
      name: ufw
      state: stopped
      enabled: false

  # Добавляем gpg-key репозитория
  - name: add gpg frrouting.org
    apt_key:
      url: "https://deb.frrouting.org/frr/keys.asc"
      state: present

  # Добавляем репозиторий https://deb.frrouting.org/frr
  - name: add frr repo
    apt_repository:
      repo: 'deb https://deb.frrouting.org/frr {{ ansible_distribution_release }} frr-stable'
      state: present
  
  # Обновляем пакеты и устанавливаем FRR
  - name: install FRR packages
    apt:
      name: 
        - frr
        - frr-pythontools
      state: present
      update_cache: true

  # Включаем маршрутизацию транзитных пакетов
  - name: set up forward packages across routers
    sysctl:
      name: net.ipv4.conf.all.forwarding
      value: '1'
      state: present
  
  # Копируем файл daemons на хосты, указываем владельца и права
  - name: base set up OSPF 
    template:
      src: daemons
      dest: /etc/frr/daemons
      owner: frr
      group: frr
      mode: 0640

  # Копируем файл frr.conf на хосты, указываем владельца и права
  - name: set up OSPF 
    template:
      src: frr.conf.j2
      dest: /etc/frr/frr.conf
      owner: frr
      group: frr
      mode: 0640

  # Перезапускам FRR и добавляем в автозагрузку
  - name: restart FRR
    service:
      name: frr
      state: restarted
      enabled: true


  ### Настройка ассиметричного роутинга ###
    
   # Отключаем запрет ассиметричного роутинга 
  - name: set up asynchronous routing
    sysctl:
      name: net.ipv4.conf.all.rp_filter
      value: '0'
      state: present

  # Делаем интерфейс enp0s8 в router1 «дорогим» 
  - name: set up OSPF 
    template:
      src: frr.conf.j2
      dest: /etc/frr/frr.conf
      owner: frr
      group: frr
      mode: 0640

  # Применяем настройки
  - name: restart FRR
    service:
      name: frr
      state: restarted
      enabled: true

  - name: Sleep for 40 seconds for apply OSPF
    ansible.builtin.wait_for:
      timeout: 40
  
  - name: Test routes
    ansible.builtin.shell:
      cmd: traceroute 192.168.30.1
    register: command_output1

  - name: Print traceroute
    ansible.builtin.debug:
      var: command_output1.stdout_lines



  ### Настройка симметичного роутинга ###

  - name: Set symmetric routing variable
    set_fact:
      symmetric_routing: true
    tags:
      - setup_ospf

  - name: set up OSPF for symmetric routing
    template:
      src: frr.conf.j2
      dest: /etc/frr/frr.conf
      owner: frr
      group: frr
      mode: 0640
    # tags:
    #   - setup_ospf

  - name: Sleep for 40 seconds for apply OSPF
    ansible.builtin.wait_for:
      timeout: 40

  - name: restart FRR
    service:
      name: frr
      state: restarted
      enabled: true
    # tags:
    #   - setup_ospf

  - name: Sleep for 40 seconds for apply OSPF
    ansible.builtin.wait_for:
      timeout: 40
    # tags:
    # - setup_ospf

  - name: Test routes
    ansible.builtin.shell:
      cmd: traceroute 192.168.30.1
    register: command_output1
    # tags:
    # - setup_ospf

  - name: Print traceroute
    ansible.builtin.debug:
      var: command_output1.stdout_lines
    # tags:
    # - setup_ospf

